{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","users","email","name","className","href","CommentInfo","comment","body","CommentList","comments","map","id","PostInfo","userPostComment","title","length","PostList","userPostComments","postsFromServer","post","commentsFromServer","filter","postId","postcomment","userId","usersFromServer","find","user","App","ReactDOM","render","document","getElementById"],"mappings":"o18IAEaA,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjBC,EAAgBD,EAAhBC,MAAOC,EAASF,EAATE,KAEf,OACE,8BACG,eAED,mBAAGC,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,mBACMC,SCVCG,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBJ,EAAsBI,EAAtBJ,KAAMD,EAAgBK,EAAhBL,MAAOM,EAASD,EAATC,KAErB,OACE,sBAAKJ,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,mBAA0CD,KAEzC,OAED,mBACEC,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGI,QChBIC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKN,UAAU,cAAf,SACGM,EAASC,KAAI,SAAAJ,GAAO,OACnB,cAAC,EAAD,CACEA,QAASA,GACJA,EAAQK,WCJRC,G,MAAW,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACjBC,EAAiCD,EAAjCC,MAAOd,EAA0Ba,EAA1Bb,MAAOO,EAAmBM,EAAnBN,KAAME,EAAaI,EAAbJ,SAE5B,OACE,sBAAKN,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGW,IAGH,cAAC,EAAD,CACEd,MAAOA,OAIX,mBAAGG,UAAU,iBAAb,mBACMI,KAEJE,EAASM,OAAS,EAEhB,cAAC,EAAD,CACEN,SAAUA,IAGZ,qCACE,uBACA,mBAAG,UAAQ,oBAAX,qCC5BL,SAASO,EAAT,GACL,OAD6C,EAApBC,iBACDP,KAAI,SAAAG,GAAe,OACzC,cAAC,EAAD,CACEA,gBAAiBA,GADnB,UAEUA,EAAgBF,QCc9B,IAAMM,EATmBC,EAAgBR,KAAI,SAAAS,GAAI,kCAC1CA,GAD0C,IAE7CV,UANaE,EAMKQ,EAAKR,GALlBS,EAAmBC,QAAO,SAAAf,GAAO,OAAIA,EAAQgB,SAAWX,MAAO,QADxE,IAAiBA,KAayBD,KAAI,SAAAa,GAAW,kCAClDA,GADkD,IAErDvB,OANiBW,EAMEY,EAAYC,OAL1BC,EAAgBC,MAAK,SAAAC,GAAI,OAAIA,EAAKhB,KAAOA,MAAO,QADzD,IAAqBA,KASRiB,EAAM,kBACjB,0BAASzB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,qBAAKA,UAAU,WAAf,SACE,cAACa,EAAD,CACEC,iBAAkBA,UC3B1BY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cb3d53eb.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ users }) => {\n  const { email, name } = users;\n\n  return (\n    <p>\n      {' Posted by  '}\n\n      <a className=\"UserInfo\" href={`mailto:${email}`}>\n        {`${name}`}\n      </a>\n    </p>\n  );\n};\n","export const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{`${name}`}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo\n        comment={comment}\n        key={comment.id}\n      />\n    ))}\n  </div>\n);\n","import { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ userPostComment }) => {\n  const { title, users, body, comments } = userPostComment;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {title}\n        </h3>\n\n        <UserInfo\n          users={users}\n        />\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {`${body}`}\n      </p>\n      { comments.length > 0\n        ? (\n          <CommentList\n            comments={comments}\n          />\n        ) : (\n          <>\n            <hr />\n            <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n          </>\n        )}\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport function PostList({ userPostComments }) {\n  return userPostComments.map(userPostComment => (\n    <PostInfo\n      userPostComment={userPostComment}\n      key={`${userPostComment.id}`}\n    />\n  ));\n}\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getById(id) {\n  return commentsFromServer.filter(comment => comment.postId === id) || null;\n}\n\nconst postsWizComments = postsFromServer.map(post => (\n  { ...post,\n    comments: getById(post.id) }\n));\n\nfunction getUserById(id) {\n  return usersFromServer.find(user => user.id === id) || null;\n}\n\nconst userPostComments = postsWizComments.map(postcomment => (\n  { ...postcomment,\n    users: getUserById(postcomment.userId) }\n));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <div className=\"PostList\">\n      <PostList\n        userPostComments={userPostComments}\n      />\n    </div>\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}